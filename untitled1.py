# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Gswv17IadLLGMIvMhAb5I7XvYUIE1mT3
"""

# Función para determinar la precedencia de los operadores usando lambda
def precedencia(op):
    if op in ['+', '-']:
        return 1
    elif op in ['*', '/']:
        return 2
    elif op == '**':
        return 3
    else:
        return 0

# Función para convertir una expresión aritmética a notación polaca inversa
def convertir_a_notacion_polaca(expresion):
    pila = []
    salida = []
    pasos = []

    for token in expresion.split():
        if token.isnumeric():  # Si es un número
            salida.append(token)
            pasos.append(f"Agregar número {token} a la salida")
        elif token == '(':
            pila.append(token)
            pasos.append(f"Apilar paréntesis izquierdo")
        elif token == ')':
            # Desapilamos operadores hasta encontrar paréntesis izquierdo
            while pila and pila[-1] != '(':
                salida.append(pila.pop())
                pasos.append(f"Desapilar operador para agregar a la salida")
            pila.pop()  # Quitar paréntesis izquierdo
            pasos.append(f"Desapilar paréntesis izquierdo")
        else:  # Si es un operador
            while pila and precedencia(token) <= precedencia(pila[-1]):
                salida.append(pila.pop())
                pasos.append(f"Desapilar operador de mayor o igual precedencia para agregar a la salida")
            pila.append(token)
            pasos.append(f"Apilar operador {token}")

    # Desapilamos todos los operadores restantes
    while pila:
        salida.append(pila.pop())
        pasos.append(f"Desapilar operador restante para agregar a la salida")

    return ' '.join(salida), pasos

# Función para generar un archivo de reporte de los pasos
def generar_reporte(pasos, archivo='reporte.txt'):
    with open(archivo, 'w') as file:
        for paso in pasos:
            file.write(paso + '\n')

# Bloque principal para ejecutar
if __name__ == "__main__":
    # Ejemplo de expresión a convertir
    expresion = "23 * ( 98 * 12 ) ** 6 + 8"

    # Convertimos la expresión
    notacion_polaca, pasos = convertir_a_notacion_polaca(expresion)

    # Mostramos la notación polaca inversa
    print("Notación Polaca Inversa:", notacion_polaca)

    # Generamos el reporte de pasos
    generar_reporte(pasos)
    print("Reporte generado en 'reporte.txt'")

    # Mostramos los pasos
    with open('reporte.txt', 'r') as file:
        reporte = file.read()
        print("\nReporte de pasos:\n")
        print(reporte)